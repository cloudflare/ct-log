// DO NOT MODIFY. THIS FILE IS AUTOMATICALLY GENERATED BY "go generate".

package main

import (
	"fmt"

	"github.com/google/trillian"
	"github.com/google/trillian/server"
	"golang.org/x/net/context"
	"google.golang.org/grpc"
)

// NOTE(brendan): The `opts` argument to each function call seems to be a
// technical detail of how GRPC works and carries no information.

type trillianLogClient struct {
	interceptor grpc.UnaryServerInterceptor
	server      *server.TrillianLogRPCServer
}
{{ range . }}
func (tlc trillianLogClient) {{ . }}(ctx context.Context,
	req *trillian.{{ . }}Request, opts ...grpc.CallOption) (
	*trillian.{{ . }}Response, error) {

	handler := func(ctx context.Context, temp interface{}) (interface{}, error) {
		req, ok := temp.(*trillian.{{ . }}Request)
		if !ok {
			return nil, fmt.Errorf("expected request of type *trillian.{{ . }}Request, got %T", temp)
		}
		return tlc.server.{{ . }}(ctx, req)
	}
	info := &grpc.UnaryServerInfo{FullMethod: "/trillian.TrillianLog/{{ . }}"}
	temp, err := tlc.interceptor(ctx, req, info, handler)
	if err != nil {
		return nil, err
	}
	resp, ok := temp.(*trillian.{{ . }}Response)
	if !ok {
		return nil, fmt.Errorf("expected response of type *trillian.{{ . }}Response, got %T", temp)
	}

	return resp, nil
}
{{ end -}}
